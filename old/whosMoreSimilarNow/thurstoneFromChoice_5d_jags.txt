# choice probabilities for "which pair is more similar" task
data{
  pi = 3.1415
}
model{
 # mu[1] = 0
  #mu[2] ~ dunif(0, pi)
  for (j in 1:nStimuli){
    mu[j] ~ dunif(0, pi)
  } 
  sigma ~ dunif(0, pi)
  for (t in 1:nTrials){
    # raw mental samples
    xAtmp1[t] ~ dnorm(mu[a[t]], 1/sigma^2)
    xBtmp1[t] ~ dnorm(mu[b[t]], 1/sigma^2)
    xCtmp1[t] ~ dnorm(mu[c[t]], 1/sigma^2)
    xDtmp1[t] ~ dnorm(mu[d[t]], 1/sigma^2)
    # mental samples modulo pi
    xAtmp2[t] = ifelse(xAtmp1[t] > pi, xAtmp1[t] - pi, xAtmp1[t])
    xA[t] = ifelse(xAtmp2[t] < 0, xAtmp2[t] + pi, xAtmp2[t])
    xBtmp2[t] = ifelse(xBtmp1[t] > pi, xBtmp1[t] - pi, xBtmp1[t])
    xB[t] = ifelse(xBtmp2[t] < 0, xBtmp2[t] + pi, xBtmp2[t])
    xCtmp2[t] = ifelse(xCtmp1[t] > pi, xCtmp1[t] - pi, xCtmp1[t])
    xC[t] = ifelse(xCtmp2[t] < 0, xCtmp2[t] + pi, xCtmp2[t])
    xDtmp2[t] = ifelse(xDtmp1[t] > pi, xDtmp1[t] - pi, xDtmp1[t])
    xD[t] = ifelse(xDtmp2[t] < 0, xDtmp2[t] + pi, xDtmp2[t])
    # difference of distances
    dd[t] = abs(xA[t]-xB[t]) - abs(xC[t]-xD[t])
    # semi-circular transform of difference of distances
    cdd[t] = step(dd[t])*min(c(dd[t], pi-dd[t])) + (1-step(dd[t]))*max(c(dd[t], -pi-dd[t]))
    # response
    y[t] ~ dinterval(cdd[t], 0)
  }
}